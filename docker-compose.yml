networks:
  app-network:
    driver: bridge

services:
  postgres:
    image: postgres:17
    environment:
      - POSTGRES_DB=product_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: pg_isready -U admin -d product_db
      interval: 10s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:7
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=product_review_aggregate_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/product_db --quiet
      interval: 10s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    networks:
      - app-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 3

  product-service:
    build:
      context: .
      dockerfile: apps/product-service/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    environment:
      - PORT=3000
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=product_db
      - POSTGRES_SYNC_ORM=true
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  product-review-processor:
    build:
      context: .
      dockerfile: apps/product-review-processor/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    environment:
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - MONGO_INITDB_HOST=mongodb
      - MONGO_INITDB_PORT=27017
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=product_review_aggregate_db
      - MONGO_INITDB_SYNC_ORM=true
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy

volumes:
  postgres_data:
  mongodb_data:
